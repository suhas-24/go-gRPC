// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: highscore.proto

package m_highscore_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//define request and response types
type SetHighscoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HighScore float64 `protobuf:"fixed64,1,opt,name=high_score,json=highScore,proto3" json:"high_score,omitempty"`
}

func (x *SetHighscoreRequest) Reset() {
	*x = SetHighscoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highscore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHighscoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHighscoreRequest) ProtoMessage() {}

func (x *SetHighscoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_highscore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHighscoreRequest.ProtoReflect.Descriptor instead.
func (*SetHighscoreRequest) Descriptor() ([]byte, []int) {
	return file_highscore_proto_rawDescGZIP(), []int{0}
}

func (x *SetHighscoreRequest) GetHighScore() float64 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

type SetHighscoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set bool `protobuf:"varint,1,opt,name=set,proto3" json:"set,omitempty"`
}

func (x *SetHighscoreResponse) Reset() {
	*x = SetHighscoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highscore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHighscoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHighscoreResponse) ProtoMessage() {}

func (x *SetHighscoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_highscore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHighscoreResponse.ProtoReflect.Descriptor instead.
func (*SetHighscoreResponse) Descriptor() ([]byte, []int) {
	return file_highscore_proto_rawDescGZIP(), []int{1}
}

func (x *SetHighscoreResponse) GetSet() bool {
	if x != nil {
		return x.Set
	}
	return false
}

type GetHighscoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHighscoreRequest) Reset() {
	*x = GetHighscoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highscore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighscoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighscoreRequest) ProtoMessage() {}

func (x *GetHighscoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_highscore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighscoreRequest.ProtoReflect.Descriptor instead.
func (*GetHighscoreRequest) Descriptor() ([]byte, []int) {
	return file_highscore_proto_rawDescGZIP(), []int{2}
}

type GetHighscoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HighScore float64 `protobuf:"fixed64,1,opt,name=high_score,json=highScore,proto3" json:"high_score,omitempty"`
}

func (x *GetHighscoreResponse) Reset() {
	*x = GetHighscoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highscore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHighscoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHighscoreResponse) ProtoMessage() {}

func (x *GetHighscoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_highscore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHighscoreResponse.ProtoReflect.Descriptor instead.
func (*GetHighscoreResponse) Descriptor() ([]byte, []int) {
	return file_highscore_proto_rawDescGZIP(), []int{3}
}

func (x *GetHighscoreResponse) GetHighScore() float64 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

var File_highscore_proto protoreflect.FileDescriptor

var file_highscore_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x6d, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x22, 0x34, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x68, 0x69,
	0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x48, 0x69,
	0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x65,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x32,
	0xcc, 0x01, 0x0a, 0x10, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x2e, 0x68, 0x69,
	0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x23, 0x2e, 0x6d, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x69, 0x67, 0x68, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10,
	0x5a, 0x0e, 0x6d, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_highscore_proto_rawDescOnce sync.Once
	file_highscore_proto_rawDescData = file_highscore_proto_rawDesc
)

func file_highscore_proto_rawDescGZIP() []byte {
	file_highscore_proto_rawDescOnce.Do(func() {
		file_highscore_proto_rawDescData = protoimpl.X.CompressGZIP(file_highscore_proto_rawDescData)
	})
	return file_highscore_proto_rawDescData
}

var file_highscore_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_highscore_proto_goTypes = []interface{}{
	(*SetHighscoreRequest)(nil),  // 0: m.highscore.v1.SetHighscoreRequest
	(*SetHighscoreResponse)(nil), // 1: m.highscore.v1.SetHighscoreResponse
	(*GetHighscoreRequest)(nil),  // 2: m.highscore.v1.GetHighscoreRequest
	(*GetHighscoreResponse)(nil), // 3: m.highscore.v1.GetHighscoreResponse
}
var file_highscore_proto_depIdxs = []int32{
	2, // 0: m.highscore.v1.HighscoreService.GetHighscore:input_type -> m.highscore.v1.GetHighscoreRequest
	0, // 1: m.highscore.v1.HighscoreService.SetHighscore:input_type -> m.highscore.v1.SetHighscoreRequest
	3, // 2: m.highscore.v1.HighscoreService.GetHighscore:output_type -> m.highscore.v1.GetHighscoreResponse
	1, // 3: m.highscore.v1.HighscoreService.SetHighscore:output_type -> m.highscore.v1.SetHighscoreResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_highscore_proto_init() }
func file_highscore_proto_init() {
	if File_highscore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_highscore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHighscoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highscore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHighscoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highscore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighscoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highscore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHighscoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_highscore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_highscore_proto_goTypes,
		DependencyIndexes: file_highscore_proto_depIdxs,
		MessageInfos:      file_highscore_proto_msgTypes,
	}.Build()
	File_highscore_proto = out.File
	file_highscore_proto_rawDesc = nil
	file_highscore_proto_goTypes = nil
	file_highscore_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HighscoreServiceClient is the client API for HighscoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HighscoreServiceClient interface {
	GetHighscore(ctx context.Context, in *GetHighscoreRequest, opts ...grpc.CallOption) (*GetHighscoreResponse, error)
	SetHighscore(ctx context.Context, in *SetHighscoreRequest, opts ...grpc.CallOption) (*SetHighscoreResponse, error)
}

type highscoreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHighscoreServiceClient(cc grpc.ClientConnInterface) HighscoreServiceClient {
	return &highscoreServiceClient{cc}
}

func (c *highscoreServiceClient) GetHighscore(ctx context.Context, in *GetHighscoreRequest, opts ...grpc.CallOption) (*GetHighscoreResponse, error) {
	out := new(GetHighscoreResponse)
	err := c.cc.Invoke(ctx, "/m.highscore.v1.HighscoreService/GetHighscore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *highscoreServiceClient) SetHighscore(ctx context.Context, in *SetHighscoreRequest, opts ...grpc.CallOption) (*SetHighscoreResponse, error) {
	out := new(SetHighscoreResponse)
	err := c.cc.Invoke(ctx, "/m.highscore.v1.HighscoreService/SetHighscore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HighscoreServiceServer is the server API for HighscoreService service.
type HighscoreServiceServer interface {
	GetHighscore(context.Context, *GetHighscoreRequest) (*GetHighscoreResponse, error)
	SetHighscore(context.Context, *SetHighscoreRequest) (*SetHighscoreResponse, error)
}

// UnimplementedHighscoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHighscoreServiceServer struct {
}

func (*UnimplementedHighscoreServiceServer) GetHighscore(context.Context, *GetHighscoreRequest) (*GetHighscoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHighscore not implemented")
}
func (*UnimplementedHighscoreServiceServer) SetHighscore(context.Context, *SetHighscoreRequest) (*SetHighscoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetHighscore not implemented")
}

func RegisterHighscoreServiceServer(s *grpc.Server, srv HighscoreServiceServer) {
	s.RegisterService(&_HighscoreService_serviceDesc, srv)
}

func _HighscoreService_GetHighscore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHighscoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighscoreServiceServer).GetHighscore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m.highscore.v1.HighscoreService/GetHighscore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighscoreServiceServer).GetHighscore(ctx, req.(*GetHighscoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HighscoreService_SetHighscore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetHighscoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HighscoreServiceServer).SetHighscore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/m.highscore.v1.HighscoreService/SetHighscore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HighscoreServiceServer).SetHighscore(ctx, req.(*SetHighscoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HighscoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "m.highscore.v1.HighscoreService",
	HandlerType: (*HighscoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHighscore",
			Handler:    _HighscoreService_GetHighscore_Handler,
		},
		{
			MethodName: "SetHighscore",
			Handler:    _HighscoreService_SetHighscore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "highscore.proto",
}
